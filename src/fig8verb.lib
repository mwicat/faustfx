/*
 * Synthetic reverberator simulator
 *
 * Washy and synthetic reverb, gorgeous sounding when modulated.
 * The core architecture is two channels of allpass filter series
 * terminated by delays with their feedbacks crossed as described by Keith Barr
 * and Sean Costello.
 *
 * The algorithm is insipired by NI Reaktor "Space Master 2" ensemble
 * by Martijn Zwartjes.
 */

declare name "Fig8verb";
declare author "Marek Wiewiorski";
declare version "0.4";
declare license "MIT";

import("stdfaust.lib");

sz_scale(0) = 0.506392;
sz_scale(1) = 0.803821;
sz_scale(2) = 1;
sz_scale(3) = 1.49834;

fig8verb(
  maxdel,
  sz, dffs, fb_gain,
  lfo_freq, lfo_amount,
  hi_level, hi_freq, lo_level, lo_freq) = (route_in : +,+ : core) ~ fb with {
    route_in = route(4, 4, (1, 3), (2, 2), (3, 1), (4, 4));

    filter_hs = fi.highshelf(1, hi_level, hi_freq);
    filter_ls = fi.lowshelf(1, lo_level, lo_freq);
    filter = filter_hs : filter_ls;

    lfo_phase(i) = ma.PI/4 * i;
    lfo(i) = lfo_amount * os.oscp(lfo_freq, lfo_phase(i));

    dtime(ch, i) = sz_scale(i) * sz + lfo(ch*i);

    allpass(ch, i) = fi.allpass_fcomb(maxdel, dtime(ch, i), dffs);

    diffusor(ch) = filter : seq(i, 3, allpass(ch, i));
    delay(ch) = de.fdelay(maxdel, dtime(ch, 3));

    fb = par(i, 2, delay(i) * fb_gain);
    core = par(i, 2, diffusor(i));
};

fig8verb_simple(fb, mod) = fig8verb(
  maxdel, sz, dffs, fb,
  lfo_freq, lfo_amount,
  hi_level, hi_freq, lo_level, lo_freq) with {
    hi_level = 0;
    hi_freq = 4000;

    lo_level = 0;
    lo_freq = 100;

    sz = 600;

    maxdel = 5000;
    dffs = 0.54;

    lfo_freq = 0.3;
    lfo_amount = mod;
};
